rootUser: {{ minio_accesskey }}
rootPassword: {{ minio_secretkey }}

minioAPIPort: 9000
minioConsolePort: 9001
certsPath: /etc/minio/certs/

tls:
  enabled: {{ enable_tls }}
  certSecret: certs
  publicCrt: public.crt
  privateKey: private.key

# -- MINIO CONSOLE SERVICE --
consoleService:
  type: NodePort
  nodePort: 30303

# -- MINIO SERVICE --
service:
  type: NodePort
  port: 30300

# -- PVC --
persistence:
  accessModes: ReadWriteOnce
  size: 20Gi

mountPath: "/data"

# -- INGRESS --
ingress:
  enabled: {{ enable_ingress }}
  hosts:
  - {{ public_hostname_api }}
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: {{ ingress_certmanager_issuer }}
  tls:
  - hosts:
    - {{ public_hostname_api }}
    secretName: {{ public_hostname_api }}

{% if enable_ingress %}
environment:
  MINIO_BROWSER_REDIRECT_URL: "https://{{ public_hostname_console }}"
  MINIO_SERVER_URL: "https://{{ public_hostname_api }}"
{% else %}
environment:
  MINIO_BROWSER_REDIRECT_URL: "{{ "https" if enable_tls else "http" }}://{{ ansible_default_ipv4.address }}:30300"
  MINIO_SERVER_URL: "{{ "https" if enable_tls else "http" }}://{{ ansible_default_ipv4.address }}:30303"
{% endif %}

# -- MINIO CONSOLE INGRESS --
consoleIngress:
  enabled: {{ enable_ingress }}
  hosts:
  - {{ public_hostname_console }}
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: {{ ingress_certmanager_issuer }}
  tls:
  - hosts:
    - {{ public_hostname_console }}
    secretName: {{ public_hostname_console }}

# -- DEPLOYMENT --
mode: standalone

{% if master_deploy %}
tolerations:
- key: node-role.kubernetes.io/master
  operator: Exists
  effect: NoSchedule
nodeSelector:
  node-role.kubernetes.io/master: ''
{% endif %}
