rootUser: "{{ minio_accesskey }}"
rootPassword: "{{ minio_secretkey }}"

minioAPIPort: 9000
minioConsolePort: 9001
certsPath: /etc/minio/certs/

{% if enable_tls and not enable_ingress %}
tls:
  enabled: true
  certSecret: certs
  publicCrt: public.crt
  privateKey: private.key
{% endif %}

# -- MINIO CONSOLE SERVICE --
consoleService:
  type: NodePort
  nodePort: 30303

# -- MINIO SERVICE --
service:
  type: NodePort
  nodePort: 30300

# -- PVC --
persistence:
  accessModes: ReadWriteOnce
  size: 20Gi

mountPath: "/data"

{% if enable_ingress %}
# -- INGRESS --
ingress:
  enabled: true
  hosts:
  - {{ public_hostname_api }}
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: {{ ingress_certmanager_issuer }}
  tls:
  - hosts:
    - {{ public_hostname_api }}
    secretName: {{ public_hostname_api }}

# -- MINIO CONSOLE INGRESS --
consoleIngress:
  enabled: true
  hosts:
  - {{ public_hostname_console }}
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: {{ ingress_certmanager_issuer }}
  tls:
  - hosts:
    - {{ public_hostname_console }}
    secretName: {{ public_hostname_console }}

# -- ENVIRONMENT VARIABLES --
environment:
  MINIO_BROWSER_REDIRECT_URL: "https://{{ public_hostname_console }}"
  MINIO_SERVER_URL: "https://{{ public_hostname_api }}"
{% else %}
environment:
  MINIO_BROWSER_REDIRECT_URL: "{{ "https" if enable_tls else "http" }}://{{ ansible_default_ipv4.address }}:30303"
  MINIO_SERVER_URL: "{{ "https" if enable_tls else "http" }}://{{ ansible_default_ipv4.address }}:30300"
{% endif %}

# -- DEPLOYMENT --
mode: standalone

resources:
  requests:
    memory: 600Mi

{% if master_deploy %}
tolerations:
- key: node-role.kubernetes.io/control-plane
  operator: Exists
  effect: NoSchedule
nodeSelector:
  node-role.kubernetes.io/control-plane: ''

makeUserJob:
 tolerations:
 - key: node-role.kubernetes.io/control-plane
   effect: NoSchedule
 nodeSelector:
   node-role.kubernetes.io/control-plane: ''
{% endif %}
