apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  namespace: minio
spec:
  selector:
    matchLabels:
      app: minio
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: minio
    spec:
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: minio-pv-claim
{% if enable_tls %}
      - name: secret-volume
        secret:
          secretName: tls-ssl-minio
          items:
          - key: public.crt
            path: public.crt
          - key: private.key
            path: private.key
          - key: public.crt
            path: CAs/public.crt
{% endif %}
      containers:
      - name: minio
        volumeMounts:
        - name: data 
          mountPath: "/data"
{% if enable_tls %}
        - name: secret-volume
          mountPath: /etc/minio/certs
{% endif %}
        image: minio/minio:{{ minio_release }}
        args:
        - server
        - /data
        env:
        - name: MINIO_ACCESS_KEY
          value: {{ minio_accesskey }}
        - name: MINIO_SECRET_KEY
          value: {{ minio_secretkey }}
        ports:
        - containerPort: 9000
        readinessProbe:
          httpGet:
{% if enable_tls %}
            scheme: HTTPS
{% endif %}
            path: /minio/health/ready
            port: 9000
          initialDelaySeconds: 120
          periodSeconds: 20
        livenessProbe:
          httpGet:
{% if enable_tls %}
            scheme: HTTPS
{% endif %}
            path: /minio/health/live
            port: 9000
          initialDelaySeconds: 120
          periodSeconds: 20
        resources:
          requests:
            memory: 500Mi
{% if master_deploy %}
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      nodeSelector:
        node-role.kubernetes.io/master: ''
{% endif %}
